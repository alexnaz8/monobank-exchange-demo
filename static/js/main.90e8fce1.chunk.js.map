{"version":3,"sources":["containers/ErrorBoundary.js","services/ApiCaller.js","components/RefreshDataButton.js","components/ExchangeRatesCards.js","helpers/currencyHelper.js","components/Loader.js","containers/CurrencyTable.js","App.js","serviceWorker.js","index.js"],"names":["ErrorBoundary","state","hasError","this","props","children","error","console","log","Component","ApiCaller","axios","process","then","data","catch","err","status","RefreshDataButton","getCurrenciesData","className","onClick","ExchangeRatesCards","currenciesList","currenciesArray","filter","item","rateSell","map","index","currencyInfo","currencyCodeA","currency","currencyCodeB","getCurrencyName","firstCurrency","secondCurrency","itemKey","key","src","alt","rateBuy","Loader","style","backgroundImage","CurrencyTable","useState","setCurrencies","bankApi","res","useEffect","length","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qSAkBeA,E,2MAhBXC,MAAQ,CAAEC,UAAU,G,wEAQhB,OAAIC,KAAKF,MAAMC,SACJ,0DAGJC,KAAKC,MAAMC,Y,gDAVUC,GAE5B,OADAC,QAAQC,IAAIF,GACL,CAAEJ,UAAU,O,GALCO,a,uBCabC,E,4GAXP,OAAOC,IAAMC,yCACRC,MAAK,qBAAEC,QACPC,OAAM,SAAAC,GAAG,OAAIT,QAAQC,IAAI,kBAAmBQ,Q,gDAGjDL,IAAMC,yCACDC,MAAK,qBAAGI,UACRF,OAAM,SAAAC,GAAG,OAAIT,QAAQC,IAAIQ,U,KCGvBE,EAXW,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,kBACzB,OACI,4BACIC,UAAU,+EACVC,QAAS,kBAAMF,MAFnB,Y,OCqCOG,EAtCY,SAAC,GAAyB,IAC3CC,EAD0C,EAAtBC,gBAErBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,YACtBC,KAAI,SAACF,EAAMG,GAAW,IAAD,ECJC,SAAAH,GAAI,MAAI,CACnCI,SAAoBJ,EAAKK,eAAeC,SACxCF,SAAoBJ,EAAKO,eAAeD,UDGQE,CAAgBR,GADtC,mBACXS,EADW,KACIC,EADJ,KAEZC,EAAUX,EAAKK,cAAgBL,EAAKO,cAAgBJ,EAC1D,OACI,yBACIT,UAAU,+DACVkB,IAAKD,GAEL,yBAAKjB,UAAU,2BACX,yBACIA,UAAU,4BACVmB,IAAI,sFACJC,IAAI,KAER,yBAAKpB,UAAU,gBACX,yBAAKA,UAAU,sEACX,2BAAIe,GACJ,uBAAGf,UAAU,iBACRgB,IAGT,0BAAMhB,UAAU,0EAAhB,QACUM,EAAKC,UAEf,0BAAMP,UAAU,0EAAhB,OACSM,EAAKe,eAOtC,OAAO,yBAAKrB,UAAU,6BAA6BG,IErBxCmB,EAfA,WACX,OACI,yBAAKtB,UAAU,6FACX,wBAAIA,UAAU,mCAAd,mBACA,yBACIA,UAAU,8CACVuB,MAAO,CACHC,gBACI,6GC0BTC,EA/BO,WAAO,IAAD,EACiBC,mBAAS,IAD1B,mBACjBtB,EADiB,KACAuB,EADA,KAElBC,EAAU,IAAItC,EACdS,EAAoB,WACtB4B,EAAc,IACdC,EAAQ7B,oBAAoBN,MAAK,SAAAoC,GAC7BF,EAAcE,OAQtB,OAJAC,qBAAU,WACN/B,MACD,IAGC,oCACI,wBAAIC,UAAU,wEAAd,uBAGCI,EAAgB2B,OAAS,EACtB,yBAAK/B,UAAU,+BACX,kBAAC,EAAD,CAAoBI,gBAAiBA,IACrC,kBAAC,EAAD,CAAmBL,kBAAmBA,KAG1C,kBAAC,EAAD,Q,MCfDiC,MAVf,WACE,OACE,yBAAKhC,UAAU,OACb,kBAAC,EAAD,KACE,kBAAC,EAAD,SCGYiC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnD,MAAK,SAAAoD,GACjCA,EAAaC,kB","file":"static/js/main.90e8fce1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nclass ErrorBoundary extends Component {\r\n    state = { hasError: false };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n        return { hasError: true };\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Well, something is not OK.</h1>;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import axios from \"axios\";\r\nclass ApiCaller {\r\n    getCurrenciesData() {\r\n        return axios(process.env.REACT_APP_CURENCY_ENDPOINT)\r\n            .then(({data}) => data)\r\n            .catch(err => console.log(\"Error happened:\", err));\r\n    }\r\n    getCurrenciesCallStatus() {\r\n        axios(process.env.REACT_APP_CURENCY_ENDPOINT)\r\n            .then(({ status }) => status)\r\n            .catch(err => console.log(err));\r\n    }\r\n}\r\n\r\nexport default ApiCaller;\r\n","import React from \"react\";\r\n\r\nconst RefreshDataButton = ({ getCurrenciesData }) => {\r\n    return (\r\n        <button\r\n            className=\" w-full bg-blue-300 hover:bg-blue-200 text-white font-bold py-2 px-4 rounded\"\r\n            onClick={() => getCurrenciesData()}\r\n        >\r\n            Refresh\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default RefreshDataButton;\r\n","import React from \"react\";\r\nimport { getCurrencyName } from \"../helpers/currencyHelper\";\r\n\r\nconst ExchangeRatesCards = ({ currenciesArray }) => {\r\n    const currenciesList = currenciesArray\r\n        .filter(item => !!item.rateSell)\r\n        .map((item, index) => {\r\n            const [firstCurrency, secondCurrency] = getCurrencyName(item);\r\n            const itemKey = item.currencyCodeA + item.currencyCodeB + index;\r\n            return (\r\n                <div\r\n                    className=\" text-gray-700 text-center bg-gray-300 px-5 py-5 m-2 rounded\"\r\n                    key={itemKey}\r\n                >\r\n                    <div className=\"xl:flex lg:items-center\">\r\n                        <img\r\n                            className=\"rounded-lg w-full xl:w-32\"\r\n                            src=\"https://icon-library.net/images/currency-exchange-icon/currency-exchange-icon-9.jpg\"\r\n                            alt=\"\"\r\n                        />\r\n                        <div className=\"mt-4 lg:mt-0\">\r\n                            <div className=\"uppercase tracking-wide text-lg md:text-sm text-gray-600 font-bold\">\r\n                                <p>{firstCurrency}</p>\r\n                                <p className=\"text-gray-100\">\r\n                                    {secondCurrency}\r\n                                </p>\r\n                            </div>\r\n                            <span className=\"uppercase block mt-1 text-lg leading-tight font-semibold text-gray-900\">\r\n                                sell {item.rateSell}\r\n                            </span>\r\n                            <span className=\"uppercase block mt-1 text-lg leading-tight font-semibold text-gray-900\">\r\n                                buy {item.rateBuy}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    return <div className=\"sm:flex sm:justify-around\">{currenciesList}</div>;\r\n};\r\n\r\nexport default ExchangeRatesCards;\r\n","import * as currencyInfo from \"currency-codes\";\r\n\r\nexport const getCurrencyName = item => [\r\n    currencyInfo.number(item.currencyCodeA).currency,\r\n    currencyInfo.number(item.currencyCodeB).currency\r\n];\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"max-w-sm mx-auto mt-12 flex justify-center items-center p-6 bg-white rounded-lg shadow-xl\">\r\n            <h2 className=\"text-xl font-bold text-gray-700\">Data loading...</h2>\r\n            <div\r\n                className=\"w-12 h-12 bg-contain bg-center bg-no-repeat\"\r\n                style={{\r\n                    backgroundImage:\r\n                        \"url('http://66.media.tumblr.com/f02aed641beb7a5059d57484c7f80f8c/tumblr_nlmmguXypN1tv87ujo1_400.gif')\"\r\n                }}\r\n            ></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ApiCaller from \"../services/ApiCaller\";\r\nimport RefreshDataButton from \"../components/RefreshDataButton\";\r\nimport ExchangeRatesCards from \"../components/ExchangeRatesCards\";\r\nimport Loader from \"../components/Loader\";\r\nconst CurrencyTable = () => {\r\n    const [currenciesArray, setCurrencies] = useState([]);\r\n    const bankApi = new ApiCaller();\r\n    const getCurrenciesData = () => {\r\n        setCurrencies([]);\r\n        bankApi.getCurrenciesData().then(res => {\r\n            setCurrencies(res);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCurrenciesData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"text-xl font-bold mt-6 sm:text-5xl sm:mt-1 text-gray-800 text-center\">\r\n                Currencies are HERE\r\n            </h1>\r\n            {currenciesArray.length > 0 ? (\r\n                <div className=\"container mt-5 mx-auto px-2\">\r\n                    <ExchangeRatesCards currenciesArray={currenciesArray} />\r\n                    <RefreshDataButton getCurrenciesData={getCurrenciesData} />\r\n                </div>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CurrencyTable;\r\n","import React from \"react\";\nimport ErrorBoundary from \"./containers/ErrorBoundary\";\nimport CurrencyTable from \"./containers/CurrencyTable\";\nimport \"./styles.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ErrorBoundary>\n        <CurrencyTable />\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}